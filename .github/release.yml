name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - aarch64-apple-darwin
        include:
          - os: ubuntu-latest
            target: aarch64-apple-darwin
            use-cross: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        if: matrix.use-cross
        run: cargo install cross

      - name: Build
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Prepare binary
        shell: bash
        run: |
          BINARY_NAME="meander"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          mv target/${{ matrix.target }}/release/${BINARY_NAME} ${BINARY_NAME}-${{ matrix.target }}
          sha256sum ${BINARY_NAME}-${{ matrix.target }} > ${BINARY_NAME}-${{ matrix.target }}.sha256

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${BINARY_NAME}-${{ matrix.target }}
            ${BINARY_NAME}-${{ matrix.target }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write