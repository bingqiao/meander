name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest # Apple Silicon build
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          # Optional: Cross-compile for linux-arm64 from an x86 linux runner
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.cross
        run: cargo install cross

      - name: Build
        shell: bash
        run: |
          if [ "${{ matrix.cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Prepare artifacts
        id: prepare
        shell: bash
        run: |
          PACKAGE_NAME=meander
          ARTIFACT_DIR="dist"
          mkdir -p ${ARTIFACT_DIR}

          if [ "${{ runner.os }}" = "Windows" ]; then
            EXT=".exe"
            SOURCE_PATH="target/${{ matrix.target }}/release/${PACKAGE_NAME}${EXT}"
            ARTIFACT_PATH="${ARTIFACT_DIR}/${PACKAGE_NAME}-${{ matrix.target }}${EXT}"
            mv "${SOURCE_PATH}" "${ARTIFACT_PATH}"
            certutil -hashfile "${ARTIFACT_PATH}" SHA256 | findstr /v "certutil" > "${ARTIFACT_PATH}.sha256"
          else
            EXT=""
            SOURCE_PATH="target/${{ matrix.target }}/release/${PACKAGE_NAME}${EXT}"
            ARTIFACT_PATH="${ARTIFACT_DIR}/${PACKAGE_NAME}-${{ matrix.target }}${EXT}"
            mv "${SOURCE_PATH}" "${ARTIFACT_PATH}"
            sha256sum "${ARTIFACT_PATH}" > "${ARTIFACT_PATH}.sha256"
          fi
          
          echo "ARTIFACTS=${ARTIFACT_DIR}/*" >> $GITHUB_ENV

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ARTIFACTS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
